{"version":3,"sources":["Home.js","GamePiece.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useOktaAuth","authState","oktaAuth","app","userInfo","setUserInfo","unregistered","setUnregistered","checkAuth","useEffect","login","signInWithRedirect","originalUri","LoginButton","isAuthenticated","onClick","userText","recentGames","activeGames","GamesList","list","listId","header","id","map","game","href","title","username","signOut","recent_games","active_games","className","GamePiece","rank","color","squareId","useDrag","type","item","collect","monitor","isDragging","dragRef","ref","blockedSpaces","GameSpace","x","y","data","useDrop","accept","drop","console","log","isOver","dropRef","includes","Col","BoardRow","spaces","i","gameSpaces","push","Row","GameBoard","rows","JSON","parse","Container","lastChecked","DndProvider","backend","HTML5Backend","Game","game_id","useParams","useState","loaded","setLoaded","loading","setLoading","turn","setTurn","setColor","opponent","setOpponent","redPlayer","setRedPlayer","bluePlayer","setBluePlayer","Date","now","setLastChecked","gameData","setGameData","notFound","setNotFound","requestOptions","method","headers","body","stringify","userKey","key","user_id","fetch","then","response","ok","json","starter_uid","opponent_name","starter_name","fetchGame","turnLabel","window","location","AuthDomain","config","clientId","issuer","discoveryUri","redirectUri","endSessionRedirectUri","scopes","requireHardwareBackedKeyStore","pkce","OktaAuth","toRelativeUrl","origin","setOriginalUri","HeaderNav","to","App","args","token","getUserInfo","info","sub","email","invite_available","random_available","restoreOriginalUri","exact","path","component","LoginCallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5124a1b4.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useOktaAuth } from '@okta/okta-react';\nimport PropTypes from \"prop-types\";\n\nexport function Home(props) {\n\tconst { authState, oktaAuth } = useOktaAuth();\n    const { userInfo, setUserInfo, unregistered, setUnregistered, checkAuth } = props.app;\n\n\tuseEffect(() => checkAuth({\n\t\tauthState: authState,\n\t\toktaAuth: oktaAuth,\n\t\tuserInfo: userInfo,\n\t\tsetUserInfo: setUserInfo,\n\t\tsetUnregistered: setUnregistered\n\t}), [authState, oktaAuth]); // Update if authState changes\n\n\tif (!authState) {\n\t\treturn (\n\t\t\t<div>Loading authentication...</div>\n\t\t);\n\t}\n\n\tconst login = () => oktaAuth.signInWithRedirect({originalUri: '/'});\n\tconst LoginButton = () => {\n\t\tif (!authState.isAuthenticated) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<button onClick={login}>Login</button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\tconst logout = () => { oktaAuth.signOut(); }\n\tlet userText = '';\n\tlet recentGames = '';\n\tlet activeGames = '';\n\tconst GamesList = (list, listId, header) => {\n\t\treturn (\n\t\t\t<div id={listId}>\n\t\t\t\t<h3>{ header }</h3>\n\t\t\t\t<ul>\n\t\t\t\t\t{list.map(game => <li key={`game-${listId}-${game.id}`}><a href={\"/game/\" + game.id}>{ game.title }</a></li>)}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t}\n\tif (authState.isAuthenticated) {\n\t\tif (unregistered) {\n\t\t\tuserText = (<div><p>If you are seeing this, I should really open a modal to create your profile, new user.</p></div>);\n\t\t}\n\t\telse if (userInfo) {\n\t\t\tuserText = (<div><p>Welcome, {userInfo.username}!</p><button onClick={ logout }>Logout</button></div>);\n\t\t\tif (userInfo.recent_games) {\n\t\t\t\trecentGames = GamesList(userInfo.recent_games, 'recent-games', 'Recent Games');\n\t\t\t}\n\t\t\tif (userInfo.active_games) {\n\t\t\t\tactiveGames = GamesList(userInfo.active_games, 'active-games', 'Active Games');\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tuserText = (<div><p>Loading user info...</p></div>);\n\t\t}\n\t}\n\telse {\n\t\tuserText = (<div><p>You need to sign in to use the application!</p><LoginButton /></div>);\n\t}\n\t\n\treturn (<div className=\"page-home\"><h1>Welcome to Stratego</h1>{ userText }{ activeGames }{ recentGames }</div>);\n}\n\nHome.propTypes = {\n  app: PropTypes.object\n};","/* eslint-disable */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDrag } from 'react-dnd'\n\nexport const GamePiece = (props) => {\n\tconst { rank, color, squareId } = props;\n    const [{ isDragging }, dragRef] = useDrag({\n        type: 'GamePiece',\n        item: { rank, color, squareId },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging()\n        })\n    })\n\treturn (\n\t\t<div className=\"game-piece\" ref={dragRef} data-rank={rank} data-color={color} data-square={squareId}>{ color || '' } { rank && color ? (rank || '?') : '' }{isDragging && '😱'}</div>\n\t);\n};\nGamePiece.propTypes = {\n\tcolor: PropTypes.string,\n\trank: PropTypes.any,\n\tsquareId: PropTypes.number\n};\n","/* eslint-disable */\nimport React, { useEffect, useState } from \"react\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport { useParams } from \"react-router-dom\";\nimport { useOktaAuth } from '@okta/okta-react';\nimport PropTypes from \"prop-types\";\nimport { GamePiece } from './GamePiece.js';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { useDrop } from 'react-dnd';\n\nconst blockedSpaces = [43,44,47,48,53,54,57,58];\nconst GameSpace = (props) => {\n\tconst { x, y, id, data } = props;\n    const [{ isOver }, dropRef] = useDrop({\n        accept: 'GamePiece',\n        drop: (item) => { console.log('dropped',item,'on',id); },\n        collect: (monitor) => ({\n            isOver: monitor.isOver()\n        })\n    })\n\tif (blockedSpaces.includes(id)) {\n\t\treturn (\n\t\t\t<Col className=\"game-space unpassable text-center\" data-x={x} data-y={y} data-id={id} data-passable={false}>X</Col>\n\t\t);\n\t}\n\tlet rank, color;\n\tif (props.data) {\n\t\trank = props.data.rank;\n\t\tcolor = props.data.color;\n\t}\n\treturn (\n\t\t<Col className=\"game-space\" data-x={x} data-y={y} data-id={id} ref={dropRef}>\n\t\t\t<GamePiece rank={rank} color={color} squareId={id} />\n\t\t</Col>\n\t);\n};\nGameSpace.propTypes = {\n\tterritory: PropTypes.string,\n\tpassable: PropTypes.any,\n\tid: PropTypes.number,\n\tx: PropTypes.number,\n\ty: PropTypes.number\n};\n\nconst BoardRow = (props) => {\n\tconst { y, spaces } = props;\n\tlet i = 1;\n\tlet gameSpaces = [];\n\twhile (i <= 10) {\n\t\tlet id = ((y - 1) * 10) + i;\n\t\tgameSpaces.push(<GameSpace key={id} y={y} x={i} id={id} data={spaces[id]} />);\n\t\ti++;\n\t}\n\treturn (\n\t\t<Row className=\"board-row\">\n\t\t\t{ gameSpaces }\n\t\t</Row>\n\t);\n};\nBoardRow.propTypes = {\n\ty: PropTypes.number\n};\nconst GameBoard = (props) => {\n\tif (!props || !props.data) {\n\t\treturn null;\n\t}\n\tlet rows = [];\n\tlet spaces = {};\n\tif (props.data.spaces) {\n\t\tspaces = JSON.parse(props.data.spaces);\n\t}\n\tlet y = 1;\n\twhile (y <= 10) {\n\t\trows.push(<BoardRow key={\"row-\"+y} spaces={spaces} y={y} />);\n\t\ty++;\n\t}\n\treturn (\n\t\t<Container className=\"game-board\">\n\t\t\t<p>game board, last checked { props.lastChecked }</p>\n\t\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t{ rows }\n\t\t\t</DndProvider>\n\t\t</Container>\n\t);\n};\nGameBoard.propTypes = {\n  lastChecked: PropTypes.any\n};\n\nexport function Game(props) {\n\tconst { game_id } = useParams();\n\tconst { authState, oktaAuth } = useOktaAuth();\n    const { userInfo, setUserInfo, unregistered, setUnregistered, checkAuth } = props.app;\n\tconst [ loaded, setLoaded ] = useState(false);\n\tconst [ loading, setLoading ] = useState(false);\n\tconst [ turn, setTurn ] = useState(null);\n\tconst [ color, setColor ] = useState(null);\n\tconst [ opponent, setOpponent ] = useState(null);\n\tconst [ redPlayer, setRedPlayer ] = useState(null);\n\tconst [ bluePlayer, setBluePlayer ] = useState(null);\n\tconst [ lastChecked, setLastChecked ] = useState(Date.now());\n\tconst [ gameData, setGameData ] = useState(null);\n\tconst [ notFound, setNotFound ] = useState(false);\n\n\tconst fetchGame = (id, userInfo) => {\n\t\tif (loaded) {\n\t\t\treturn;\n\t\t}\n\t\tsetLoading(true);\n\t\tconst requestOptions = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\tbody: JSON.stringify({ id: id, userKey: userInfo.key, user_id: userInfo.id })\n\t\t};\n\t\tfetch('http://localhost:3002/game', requestOptions)\n\t\t.then((response) => {\n\t\t\tif (response.ok) {\n\t\t\t\tresponse.json().then(\n\t\t\t\t\tdata => {\n\t\t\t\t\t\tsetLoaded(true);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tsetTurn(data.turn);\n\t\t\t\t\t\tsetColor(data.starter_uid == userInfo.id ? 'blue' : 'red');\n\t\t\t\t\t\tsetOpponent(data.starter_uid == userInfo.id ? data.opponent_name : data.starter_name);\n\t\t\t\t\t\tsetBluePlayer(data.starter_name);\n\t\t\t\t\t\tsetRedPlayer(data.opponent_name);\n\t\t\t\t\t\tsetLastChecked(Date.now());\n\t\t\t\t\t\tsetGameData(data);\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsetNotFound(true);\n\t\t\t}\n\t\t});\n\t}\n\n\tuseEffect(() => checkAuth({\n\t\tauthState: authState,\n\t\toktaAuth: oktaAuth,\n\t\tuserInfo: userInfo,\n\t\tsetUserInfo: setUserInfo,\n\t\tsetUnregistered: setUnregistered\n\t}), [authState, oktaAuth]); // Update if authState changes\n\n\tif (!authState) {\n\t\treturn (\n\t\t\t<div>Loading authentication...</div>\n\t\t);\n\t}\n\n\tif (notFound) {\n\t\treturn (\n\t\t\t<div>Sorry, no game was found with that id.</div>\n\t\t);\n\t}\n\n\tif (authState.isAuthenticated) {\n\t\tif (unregistered) {\n\t\t\treturn (<div><p>If you are seeing this, I should really open a modal to create your profile, new user.</p></div>);\n\t\t}\n\t\telse if (userInfo) {\n\t\t\tif (!loaded && !loading) {\n\t\t\t\tfetchGame(game_id, userInfo);\n\t\t\t}\n\t\t\tlet turnLabel = '';\n\t\t\tif (turn) {\n\t\t\t\tturnLabel = (<p>{ turn == 'red' ? redPlayer : bluePlayer }&apos;s turn.</p>);\n\t\t\t}\n\t\t\treturn (<div className=\"game-wrapper\">\n\t\t\t\tGame: { game_id }.\n\t\t\t\tYou are { userInfo.username }.\n\t\t\t\tYour opponent is { opponent }.\n\t\t\t\tYou use { color } tiles.\n\t\t\t\t{ turnLabel }\n\t\t\t\t<GameBoard data={gameData} lastChecked={lastChecked} color={color} turn={turn} />\n\t\t\t\t</div>);\n\t\t}\n\t\telse {\n\t\t\treturn (<div><p>Loading...</p></div>);\n\t\t}\n\t}\n\telse {\n\t\twindow.location = '/';\n\t\treturn (<div><p>You need to sign in to use the application!</p></div>);\n\t}\n\n}\n\nGame.propTypes = {\n  app: PropTypes.object\n};","import './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { LoginCallback, Security } from '@okta/okta-react';\nimport { OktaAuth } from '@okta/okta-auth-js';\nimport { Home } from './Home';\nimport { Game } from './Game';\nimport { toRelativeUrl } from '@okta/okta-auth-js';\n\nconst ClientId = '0oa2t6lqn7Qsg1T3g5d7';\nconst AuthDomain = 'dev-6379228.okta.com';\n\nconst config = {\n  clientId: `${ClientId}`,\n  issuer: `https://${AuthDomain}/oauth2/default`,\n  discoveryUri: `https://${AuthDomain}/oauth2/default`,\n  redirectUri: 'http://localhost:3000/login-callback',\n  endSessionRedirectUri: 'http://localhost:3000/logout',\n  scopes: ['openid', 'profile', 'email'],\n  requireHardwareBackedKeyStore: false,\n  pkce: true\n};\n\nconst oktaAuth = new OktaAuth(config);\nconst originalUri = toRelativeUrl(window.location.href, window.location.origin);\noktaAuth.setOriginalUri(originalUri);\n\nconst HeaderNav = () => {\n\treturn (\n\t\t<header>\n\t\t\t<div>Stratego</div>\n\t\t\t<ul className=\"menu\"><li><Link to=\"/\">Home</Link></li></ul>\n\t\t</header>\n\t);\n};\n\nconst App = () => {\n    const [ userInfo, setUserInfo ] = useState(null);\n    const [ unregistered, setUnregistered ] = useState(false);\n\tconst restoreOriginalUri = () => {\n\t\twindow.location='/';\n\t};\n\tconst checkAuth = (args) => {\n\t\tconst { authState, oktaAuth, userInfo, setUserInfo, setUnregistered } = args;\n\t\tif (!authState || !authState.isAuthenticated) {\n\t\t\t// When user isn't authenticated, forget any user info\n\t\t\tsetUserInfo(null);\n\t\t} else {\n\t\t\tif (!userInfo || !userInfo.username) {\n\t\t\t\toktaAuth.token.getUserInfo().then(info => {\n\t\t\t\t\tconst requestOptions = {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: { 'Content-Type': 'application/json' },\n\t\t\t\t\t\tbody: JSON.stringify({ userKey: info.sub, email: info.email })\n\t\t\t\t\t};\n\t\t\t\t\tfetch('http://localhost:3002/login', requestOptions)\n\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\tsetUserInfo({\n\t\t\t\t\t\t\t\temail: data.email,\n\t\t\t\t\t\t\t\tid: data.user_id,\n\t\t\t\t\t\t\t\tkey: info.sub,\n\t\t\t\t\t\t\t\tinvite_available: data.invite_available,\n\t\t\t\t\t\t\t\trandom_available: data.random_available,\n\t\t\t\t\t\t\t\tusername: data.username,\n\t\t\t\t\t\t\t\trecent_games: data.recentGames,\n\t\t\t\t\t\t\t\tactive_games: data.activeGames\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsetUnregistered(!data.user_id);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\tconst app = {\n\t\tuserInfo: userInfo,\n\t\tsetUserInfo: setUserInfo,\n\t\tunregistered: unregistered,\n\t\tsetUnregistered: setUnregistered,\n\t\tcheckAuth: checkAuth\n\t};\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Router>\n\t\t\t\t<HeaderNav />\n\t\t\t\t<Security oktaAuth={oktaAuth} restoreOriginalUri={restoreOriginalUri}>\n\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t<Home app={app} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/game/:game_id'>\n\t\t\t\t\t\t<Game app={app} />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path='/login-callback' component={LoginCallback}/>\n\t\t\t\t</Security>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}